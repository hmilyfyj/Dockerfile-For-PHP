FROM php:7.1-fpm-stretch

MAINTAINER fengit@outlook.com

# Install modules
COPY ./sources-9.list /etc/apt/sources.list
RUN apt-get update \
	&& apt-get install git -y \
	cron \
	vim \
	zip \
	wget \
	gcc \
	build-essential \
	libfreetype6-dev \
    libjpeg62-turbo-dev \
    libmcrypt-dev \
    libpng-dev \
    libjpeg-dev \
    libz-dev \
    openssh-client \
	supervisor \
	libwebp-dev \
    libxpm-dev  \
    && pear update-channels \
	&& pear upgrade --force \
	&& pear clear-cache \
	&& docker-php-ext-configure gd --with-gd --with-webp-dir --with-jpeg-dir  --with-png-dir --with-zlib-dir --with-xpm-dir --with-freetype-dir --enable-gd-native-ttf  \
	&& docker-php-ext-configure opcache --enable-opcache \
	&& docker-php-ext-install \
	    bcmath \
        mcrypt \
        mbstring \
        pdo_mysql \
        mysqli \
        zip \
        gd \
        opcache \
        pcntl

RUN docker-php-ext-install sockets
RUN yes "no" | pecl install swoole-4.5.11 && docker-php-ext-enable swoole
RUN yes "no" | pecl install redis && docker-php-ext-enable redis

COPY ./php-config/docker-php-ext-opcache-config.ini $PHP_INI_DIR/conf.d/docker-php-ext-opcache-config.ini

RUN apt-get install -y \
        git \
		libsasl2-dev \
		sasl2-bin \
		libsasl2-modules \
		cloog-ppl \
		libsasl2-2 \
		libmemcached-dev \
	&& wget https://github.com/libevent/libevent/releases/download/release-2.1.8-stable/libevent-2.1.8-stable.tar.gz \
	&& tar -zxvf libevent-2.1.8-stable.tar.gz \
	&& cd libevent-2.1.8-stable \
	&& ./configure --with-php-config=/usr/local/bin/php-config --prefix=/usr/local/libevent-2.1.8 \
	&& make \
	&& make install \
    && cd /root \
	&& wget https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gz \
	&& tar -zxvf libmemcached-1.0.18.tar.gz \
	&& cd libmemcached-1.0.18 \
	&& ./configure --prefix=/usr/local/libmemcached --enable-sasl --enable-sasl-pwdb \
	&& make \
	&& make install \
    && cd /root \
    && git clone -b php7 https://github.com/php-memcached-dev/php-memcached \
    && cd php-memcached \
    && phpize \
    && ./configure --with-php-config=/usr/local/bin/php-config --with-libmemcached-dir=/usr/local/libmemcached --enable-sasl --enable-memcached-sasl \
    && make \
    && make install \
    && cd .. \
    && rm -rf  php-memcached \
	&& echo "extension=memcached.so" >> /usr/local/etc/php/conf.d/memcached.ini \
	&& echo "memcached.use_sasl = 1" >> /usr/local/etc/php/conf.d/memcached.ini
RUN echo "===> Installing python, sudo, and supporting tools..."  && \
    apt-get update -y  &&  apt-get install --fix-missing          && \
    DEBIAN_FRONTEND=noninteractive         \
    apt-get install -y                     \
        python python-yaml sudo  python-pip   \
        curl gcc python-dev libffi-dev libssl-dev libicu-dev  && \
    apt-get -y --purge remove python-cffi && \
    pip install --upgrade setuptools && \
    pip install --upgrade cffi pywinrm  pip           && \
    \
    \
    \
    echo "===> Installing Ansible..."   && \
    pip install "ansible>=2.3,<2.4"     && \
    \
    \
    echo "===> Installing handy tools (not absolutely required)..."  && \
    apt-get install -y sshpass openssh-client libfontconfig \
	&& pip install csvkit && pip install --upgrade six
RUN curl -sS https://getcomposer.org/installer | php \
	&& mv composer.phar /usr/local/bin/composer \
	&& composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/ \
	&& echo "export PATH=$PATH:/root/.composer/vendor/bin" >> ~/.bashrc \
	&& composer global require "squizlabs/php_codesniffer=*" \
	&& ansible-galaxy install ansistrano.deploy,2.11.0 ansistrano.rollback,2.0.1 \
	&& ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa -q -b 2048 \
	&& cat ~/.ssh/id_rsa \
	&& ssh-keyscan coding.net >> /root/.ssh/known_hosts && ssh-keyscan github.com >> /root/.ssh/known_hosts
ADD php.ini-production /usr/local/etc/php/php.ini
ADD php-fpm-production.conf /usr/local/etc/php-fpm.d/www.conf
ADD ./_linux /
RUN mkdir -p /var/log/php-fpm && export TZ=Asia/Shanghai && ln -sf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && dpkg-reconfigure --frontend noninteractive tzdata \
	&& wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 \
	&& tar -jxvf phantomjs-2.1.1-linux-x86_64.tar.bz2 \
	&& cp phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/bin/phantomjs \
	&& chmod +x /usr/bin/phantomjs \
	&& chmod 777 -R /var/phantomjs
#RUN cd /usr/share/nginx/html && composer install --prefer-dist --no-dev --optimize-autoloader -vvvv
CMD ["php-fpm"]