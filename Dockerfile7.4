FROM php:7.4-fpm-buster

MAINTAINER fengit@outlook.com

# Install modules
COPY ./sources-10.list /etc/apt/sources.list
RUN apt-get clean && apt-get update && apt-get install -y \
	cron \
	vim \
	zip \
	wget \
	gcc \
	build-essential \
	libfreetype6-dev \
    libjpeg62-turbo-dev \
    libmcrypt-dev \
    libpng-dev \
    libjpeg-dev \
    libz-dev \
    openssh-client \
	supervisor \
	libwebp-dev \
    libxpm-dev  \
    libonig-dev libzip-dev \
    && pear update-channels \
	&& pear upgrade --force \
	&& pear clear-cache \
	&& pecl install libevent-beta swoole mcrypt \
    && docker-php-ext-configure gd --enable-gd --with-webp --with-jpeg --with-xpm --with-freetype  \
    && docker-php-ext-configure opcache --enable-opcache \
	&& docker-php-ext-install \
	    bcmath \
        mbstring \
        pdo_mysql \
        mysqli \
        zip \
        gd \
        opcache pcntl && \
        docker-php-ext-enable swoole mcrypt && \
        apt-get clean && \
        rm -rf /var/lib/apt/lists/* \

RUN yes 'n' | pecl install redis && docker-php-ext-enable redis

COPY ./php-config/docker-php-ext-opcache-config-php72.ini $PHP_INI_DIR/conf.d/docker-php-ext-opcache-config.ini

# version 1
# version 2
# version 3
RUN set -ex \
    && apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y libmemcached-dev \
    && rm -rf /var/lib/apt/lists/* \
    && MEMCACHED="`mktemp -d`" \
    && curl -skL https://github.com/php-memcached-dev/php-memcached/archive/master.tar.gz | tar zxf - --strip-components 1 -C $MEMCACHED \
    && docker-php-ext-configure $MEMCACHED \
    && docker-php-ext-install $MEMCACHED \
    && rm -rf $MEMCACHED
RUN echo "===> Installing python, sudo, and supporting tools..."  && \
    apt-get clean && apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive \
    apt-get install -y                     \
        python python-yaml sudo  python-pip   \
        curl gcc python-dev libffi-dev libssl-dev  && \
    apt-get -y --purge remove python-cffi && \
    pip install --upgrade setuptools && \
    pip install --upgrade cffi pywinrm && \
    \
    \
    \
    echo "===> Installing Ansible..."   && \
    pip install ansible && \
    \
    \
    echo "===> Installing handy tools (not absolutely required)..."  && \
    apt-get install -y sshpass openssh-client libfontconfig \
	&& pip install csvkit && pip install --upgrade six && \
	apt-get clean && \
    rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php \
	&& mv composer.phar /usr/local/bin/composer \
	&& composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/ \
	&& echo "export PATH=$PATH:/root/.composer/vendor/bin" >> ~/.bashrc \
	&& composer global require "squizlabs/php_codesniffer=*" \
	&& ansible-galaxy install ansistrano.deploy ansistrano.rollback \
	&& ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa -q -b 2048 \
	&& cat ~/.ssh/id_rsa \
	&& ssh-keyscan coding.net >> /root/.ssh/known_hosts && ssh-keyscan github.com >> /root/.ssh/known_hosts
ADD php.ini-production /usr/local/etc/php/php.ini
ADD php-fpm-production.conf /usr/local/etc/php-fpm.d/www.conf
ADD ./_linux /
RUN mkdir -p /var/log/php-fpm && export TZ=Asia/Shanghai && ln -sf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && dpkg-reconfigure --frontend noninteractive tzdata \
	&& wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 \
	&& tar -jxvf phantomjs-2.1.1-linux-x86_64.tar.bz2 \
	&& cp phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/bin/phantomjs \
	&& chmod +x /usr/bin/phantomjs \
	&& chmod 777 -R /var/phantomjs \
	&& rm phantomjs-2.1.1-linux-x86_64.tar.bz2 -f && rm phantomjs-2.1.1-linux-x86_64 -rf
#RUN cd /usr/share/nginx/html && composer install --prefer-dist --no-dev --optimize-autoloader -vvvv
CMD ["php-fpm"]

# GD https://github.com/docker-library/php/issues/608
# GD https://github.com/brefphp/bref/pull/415
# mcrypt https://github.com/docker-library/php/issues/541
# oniguruma https://github.com/docker-library/php/issues/880
# memcached https://github.com/docker-library/php/issues/132