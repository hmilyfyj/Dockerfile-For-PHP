FROM php:7-fpm-stretch

MAINTAINER fengit@outlook.com

# Install modules
COPY ./sources-9.list /etc/apt/sources.list
#RUN apt-get update \
#   && apt-get install --reinstall -d `apt-cache depends aptitude | grep depends | cut -d: f2 |tr -d "<>"`
RUN apt-get update -y && apt-get install aptitude -f -y && rm -rf /var/lib/apt/lists/*
RUN aptitude update -y && aptitude install zlib1g -y \
    git \
	cron \
	vim \
	zip \
	wget \
	gcc \
	git \
	build-essential \
	libfreetype6-dev \
    libjpeg62-turbo-dev \
    libmcrypt-dev \
    libpng-dev \
    libjpeg-dev \
    libz-dev \
    openssh-client \
	supervisor \
    && pear update-channels \
	&& pear upgrade --force \
	&& pear clear-cache \
	&& pecl install libevent swoole mcrypt-1.0.1\
	&& docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
	&& docker-php-ext-install \
        mbstring \
        pdo_mysql \
        mysqli \
        zip \
        gd \
        opcache \
    && docker-php-ext-enable swoole mcrypt \
    && rm -r /var/lib/apt/lists/*

# memcached module
RUN aptitude update -y && aptitude install -y libmemcached-dev && rm -rf /var/lib/apt/lists/*
RUN curl -o /root/memcached.zip https://github.com/php-memcached-dev/php-memcached/archive/php7.zip -L
RUN cd /root && unzip memcached.zip && rm memcached.zip && \
 cd php-memcached-php7 && \
 phpize && ./configure --enable-sasl --enable-sasl-pwdb && make && make install && \
 cd /root && rm -rf /root/php-memcached-* && \
 echo "extension=memcached.so" > /usr/local/etc/php/conf.d/memcached.ini  && \
 echo "memcached.use_sasl = 1" >> /usr/local/etc/php/conf.d/memcached.ini

 # ansible mode
RUN echo "===> Installing python, sudo, and supporting tools..."  && \
    aptitude update -y && aptitude install -y                     \
        python python-yaml sudo  python-pip   \
        curl gcc python-dev libffi-dev libssl-dev  && \
    apt-get -y --purge remove python-cffi && \
    pip install --upgrade setuptools && \
    pip install --upgrade cffi pywinrm           && \
    \
    \
    \
    echo "===> Installing Ansible..."   && \
    pip install ansible && \
    \
    \
    echo "===> Installing handy tools (not absolutely required)..."  && \
    aptitude install -y sshpass openssh-client libfontconfig \
	&& pip install csvkit && pip install --upgrade six && rm -r /var/lib/apt/lists/* \
	&& rm -r /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php \
	&& mv composer.phar /usr/local/bin/composer \
	&& composer config -g repo.packagist composer https://packagist.laravel-china.org \
	&& echo "export PATH=$PATH:/root/.composer/vendor/bin" >> ~/.bashrc \
	&& ansible-galaxy install ansistrano.deploy ansistrano.rollback \
	&& ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa -q -b 2048 \
	&& cat ~/.ssh/id_rsa \
	&& ssh-keyscan coding.net >> /root/.ssh/known_hosts && ssh-keyscan github.com >> /root/.ssh/known_hosts
ADD php.ini-production /usr/local/etc/php/php.ini
ADD php-fpm-production.conf /usr/local/etc/php-fpm.d/www.conf
ADD ./_linux /
RUN mkdir -p /var/log/php-fpm && export TZ=Asia/Shanghai && echo $TZ | tee /etc/timezone && dpkg-reconfigure --frontend noninteractive tzdata \
	&& wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 \
	&& tar -jxvf phantomjs-2.1.1-linux-x86_64.tar.bz2 \
	&& cp phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/bin/phantomjs \
	&& chmod +x /usr/bin/phantomjs \
	&& chmod 777 -R /var/phantomjs
#RUN cd /usr/share/nginx/html && composer install --prefer-dist --no-dev --optimize-autoloader -vvvv
CMD ["php-fpm"]